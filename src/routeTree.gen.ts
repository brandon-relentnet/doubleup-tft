/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnitsRouteImport } from './routes/units'
import { Route as StrategiesRouteImport } from './routes/strategies'
import { Route as ItemsRouteImport } from './routes/items'
import { Route as DoubleupRouteImport } from './routes/doubleup'
import { Route as DiscussionsRouteImport } from './routes/discussions'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DiscussionsIndexRouteImport } from './routes/discussions/index'
import { Route as DiscussionsSlugRouteImport } from './routes/discussions.$slug'

const UnitsRoute = UnitsRouteImport.update({
  id: '/units',
  path: '/units',
  getParentRoute: () => rootRouteImport,
} as any)
const StrategiesRoute = StrategiesRouteImport.update({
  id: '/strategies',
  path: '/strategies',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemsRoute = ItemsRouteImport.update({
  id: '/items',
  path: '/items',
  getParentRoute: () => rootRouteImport,
} as any)
const DoubleupRoute = DoubleupRouteImport.update({
  id: '/doubleup',
  path: '/doubleup',
  getParentRoute: () => rootRouteImport,
} as any)
const DiscussionsRoute = DiscussionsRouteImport.update({
  id: '/discussions',
  path: '/discussions',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DiscussionsIndexRoute = DiscussionsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DiscussionsRoute,
} as any)
const DiscussionsSlugRoute = DiscussionsSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => DiscussionsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/discussions': typeof DiscussionsRouteWithChildren
  '/doubleup': typeof DoubleupRoute
  '/items': typeof ItemsRoute
  '/strategies': typeof StrategiesRoute
  '/units': typeof UnitsRoute
  '/discussions/$slug': typeof DiscussionsSlugRoute
  '/discussions/': typeof DiscussionsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/doubleup': typeof DoubleupRoute
  '/items': typeof ItemsRoute
  '/strategies': typeof StrategiesRoute
  '/units': typeof UnitsRoute
  '/discussions/$slug': typeof DiscussionsSlugRoute
  '/discussions': typeof DiscussionsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/discussions': typeof DiscussionsRouteWithChildren
  '/doubleup': typeof DoubleupRoute
  '/items': typeof ItemsRoute
  '/strategies': typeof StrategiesRoute
  '/units': typeof UnitsRoute
  '/discussions/$slug': typeof DiscussionsSlugRoute
  '/discussions/': typeof DiscussionsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/discussions'
    | '/doubleup'
    | '/items'
    | '/strategies'
    | '/units'
    | '/discussions/$slug'
    | '/discussions/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/doubleup'
    | '/items'
    | '/strategies'
    | '/units'
    | '/discussions/$slug'
    | '/discussions'
  id:
    | '__root__'
    | '/'
    | '/discussions'
    | '/doubleup'
    | '/items'
    | '/strategies'
    | '/units'
    | '/discussions/$slug'
    | '/discussions/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DiscussionsRoute: typeof DiscussionsRouteWithChildren
  DoubleupRoute: typeof DoubleupRoute
  ItemsRoute: typeof ItemsRoute
  StrategiesRoute: typeof StrategiesRoute
  UnitsRoute: typeof UnitsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/units': {
      id: '/units'
      path: '/units'
      fullPath: '/units'
      preLoaderRoute: typeof UnitsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/strategies': {
      id: '/strategies'
      path: '/strategies'
      fullPath: '/strategies'
      preLoaderRoute: typeof StrategiesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/items': {
      id: '/items'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof ItemsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doubleup': {
      id: '/doubleup'
      path: '/doubleup'
      fullPath: '/doubleup'
      preLoaderRoute: typeof DoubleupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/discussions': {
      id: '/discussions'
      path: '/discussions'
      fullPath: '/discussions'
      preLoaderRoute: typeof DiscussionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/discussions/': {
      id: '/discussions/'
      path: '/'
      fullPath: '/discussions/'
      preLoaderRoute: typeof DiscussionsIndexRouteImport
      parentRoute: typeof DiscussionsRoute
    }
    '/discussions/$slug': {
      id: '/discussions/$slug'
      path: '/$slug'
      fullPath: '/discussions/$slug'
      preLoaderRoute: typeof DiscussionsSlugRouteImport
      parentRoute: typeof DiscussionsRoute
    }
  }
}

interface DiscussionsRouteChildren {
  DiscussionsSlugRoute: typeof DiscussionsSlugRoute
  DiscussionsIndexRoute: typeof DiscussionsIndexRoute
}

const DiscussionsRouteChildren: DiscussionsRouteChildren = {
  DiscussionsSlugRoute: DiscussionsSlugRoute,
  DiscussionsIndexRoute: DiscussionsIndexRoute,
}

const DiscussionsRouteWithChildren = DiscussionsRoute._addFileChildren(
  DiscussionsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DiscussionsRoute: DiscussionsRouteWithChildren,
  DoubleupRoute: DoubleupRoute,
  ItemsRoute: ItemsRoute,
  StrategiesRoute: StrategiesRoute,
  UnitsRoute: UnitsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
