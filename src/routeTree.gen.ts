/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LearnRouteImport } from './routes/learn'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LearnIndexRouteImport } from './routes/learn/index'
import { Route as LearnSlugRouteImport } from './routes/learn.$slug'

const LearnRoute = LearnRouteImport.update({
  id: '/learn',
  path: '/learn',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnIndexRoute = LearnIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LearnRoute,
} as any)
const LearnSlugRoute = LearnSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => LearnRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/learn': typeof LearnRouteWithChildren
  '/learn/$slug': typeof LearnSlugRoute
  '/learn/': typeof LearnIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/learn/$slug': typeof LearnSlugRoute
  '/learn': typeof LearnIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/learn': typeof LearnRouteWithChildren
  '/learn/$slug': typeof LearnSlugRoute
  '/learn/': typeof LearnIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/learn' | '/learn/$slug' | '/learn/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/learn/$slug' | '/learn'
  id: '__root__' | '/' | '/learn' | '/learn/$slug' | '/learn/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LearnRoute: typeof LearnRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/learn': {
      id: '/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LearnRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn/': {
      id: '/learn/'
      path: '/'
      fullPath: '/learn/'
      preLoaderRoute: typeof LearnIndexRouteImport
      parentRoute: typeof LearnRoute
    }
    '/learn/$slug': {
      id: '/learn/$slug'
      path: '/$slug'
      fullPath: '/learn/$slug'
      preLoaderRoute: typeof LearnSlugRouteImport
      parentRoute: typeof LearnRoute
    }
  }
}

interface LearnRouteChildren {
  LearnSlugRoute: typeof LearnSlugRoute
  LearnIndexRoute: typeof LearnIndexRoute
}

const LearnRouteChildren: LearnRouteChildren = {
  LearnSlugRoute: LearnSlugRoute,
  LearnIndexRoute: LearnIndexRoute,
}

const LearnRouteWithChildren = LearnRoute._addFileChildren(LearnRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LearnRoute: LearnRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
